name: Build APK - Completely Fresh Wrapper

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Extract Android Project
      run: |
        echo "üì¶ Extracting project..."
        unzip -q android_webview_project.zip
        echo "‚úÖ Extracted successfully"
        ls -la android_webview/
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: '34'
        build-tools-version: '34.0.0'
    
    - name: Completely replace Gradle wrapper
      working-directory: ./android_webview
      run: |
        echo "üîß Completely replacing Gradle wrapper..."
        
        # Remove ALL existing wrapper files
        echo "üóëÔ∏è Removing old wrapper files..."
        rm -f gradlew gradlew.bat
        rm -rf gradle/
        
        echo "‚ú® Generating fresh Gradle wrapper..."
        
        # Install gradle temporarily to generate wrapper
        cd /tmp
        wget -q https://services.gradle.org/distributions/gradle-8.7-bin.zip
        unzip -q gradle-8.7-bin.zip
        export PATH=$PATH:/tmp/gradle-8.7/bin
        
        # Generate wrapper using local gradle
        cd /workspace/android_webview
        gradle wrapper --gradle-version 8.7
        
        # Set permissions
        chmod +x gradlew
        
        echo "‚úÖ Fresh wrapper generated"
        ls -la gradlew*
        
        echo "üßπ Cleaning up..."
        rm -rf /tmp/gradle*
    
    - name: Verify new wrapper
      working-directory: ./android_webview
      run: |
        echo "üß™ Testing fresh Gradle wrapper..."
        
        # Test wrapper without any environment variables
        ./gradlew --version
        
        echo "‚úÖ Fresh wrapper is working!"
    
    - name: Clean project thoroughly
      working-directory: ./android_webview
      run: |
        echo "üßπ Deep cleaning project..."
        
        # Remove all build artifacts
        rm -rf app/build/
        rm -rf build/
        rm -rf .gradle/
        
        # Check for gradle.properties and remove if problematic
        if [ -f "gradle.properties" ]; then
          echo "üîç Checking gradle.properties..."
          cat gradle.properties
          
          # Backup and clean gradle.properties if it has memory settings
          if grep -q "org.gradle.jvmargs\|org.gradle.heap\|GRADLE_OPTS" gradle.properties; then
            echo "‚ö†Ô∏è  Found problematic memory settings in gradle.properties"
            cp gradle.properties gradle.properties.backup
            # Remove memory-related lines
            sed -i '/org.gradle.jvmargs/d' gradle.properties
            sed -i '/org.gradle.heap/d' gradle.properties
            sed -i '/GRADLE_OPTS/d' gradle.properties
            echo "‚úÖ Cleaned gradle.properties"
          fi
        fi
        
        echo "üîÑ Clean completed"
    
    - name: Build APK with fresh setup
      working-directory: ./android_webview
      run: |
        echo "üèóÔ∏è Building APK with fresh Gradle wrapper..."
        echo "üìä Configuration:"
        echo "  - Fresh Gradle wrapper (8.7)"
        echo "  - Clean gradle.properties"
        echo "  - No custom memory settings"
        
        # Build APK with minimal options
        ./gradlew assembleDebug --no-daemon --stacktrace
        
        BUILD_EXIT_CODE=$?
        
        if [ $BUILD_EXIT_CODE -eq 0 ]; then
          echo "‚úÖ APK build completed successfully!"
        else
          echo "‚ùå APK build failed"
          echo "üîç Checking what was created..."
          find app/build -name "*.apk" -type f 2>/dev/null || echo "No APK found"
          exit $BUILD_EXIT_CODE
        fi
    
    - name: Verify APK exists
      run: |
        APK_PATH="android_webview/app/build/outputs/apk/debug/app-debug.apk"
        echo "üîç Verifying APK..."
        
        if [ -f "$APK_PATH" ]; then
          echo "‚úÖ SUCCESS: APK created!"
          ls -lh "$APK_PATH"
          file "$APK_PATH"
        else
          echo "‚ùå APK not found"
          echo "üîç Looking for any APK files..."
          find android_webview -name "*.apk" -type f
          exit 1
        fi
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: webview-apk-fresh-wrapper
        path: android_webview/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
    
    - name: Upload fresh project
      uses: actions/upload-artifact@v4
      with:
        name: project-with-fresh-wrapper
        path: android_webview/
        retention-days: 30
